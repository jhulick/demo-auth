/**
 * Fill metadataStore with metadata, crafted by hand using
 * Breeze Labs: breeze.metadata.helper.js
 * @see http://www.breezejs.com/documentation/metadata-by-hand
 */
(function (angular) {
    'use strict';

    angular
        .module("app")
        .factory('metadata', metadata);

    metadata.$inject = ['breeze'];

    function metadata(breeze) {

        var service = {
            fillStore: fillStore
        };

        return service;

        /////////////////////

        function fillStore(store) {

            // Using Breeze Labs: breeze.metadata.helper.js
            // https://github.com/IdeaBlade/Breeze/blob/master/Breeze.Client/Scripts/Labs/breeze.metadata-helper.js
            // The helper reduces data entry by applying common conventions
            // and converting common abbreviations (e.g., 'type' -> 'dataType')

            // 'None' (client-generated) is the default key generation strategy for this app
            var keyGen = breeze.AutoGeneratedKeyType.None;

            // namespace of the corresponding classes on the server
            var namespace = 'Spa.Model';

            var helper = new breeze.config.MetadataHelper(namespace, keyGen);

            /*** Convenience fns and vars ***/

            // addType - make it easy to add the type to the store using the helper
            var addType = function (type) {
                helper.addTypeToStore(store, type);
            };

            // DataTypes
            var DT = breeze.DataType;
            var ID = DT.MongoObjectId; // Root entity Id

            addCustomer();

            function addCustomer() {
                addType({
                    name: 'Customer',
                    dataProperties: {
                        id: {type: ID},
                        firstName: {max: 50},
                        lastName: {max: 50},
                        phone: {max: 100},
                        email: {max: 255},
                        address: {complex: 'Address'}
                    }
                });
            }
        }
    }

}(this.angular));